# -*- coding: utf-8 -*-
"""Vivienda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I_7sBsWrxi_NtxhttghEEiPH84UM21Vv
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

st.image("UNRC.png", caption="Universidad Nacional Rosario Castellanos", width=300)

st.set_page_config(page_title="√çndice SHF de Precios de la Vivienda en M√©xico: Evoluci√≥n anual por municipio", page_icon="üìà", layout="centered")

st.title("√çndice SHF de Precios de la Vivienda en M√©xico: Evoluci√≥n anual por municipio (2015‚Äì2024)")

# === DATOS COMPLETOS ===
data = {
    "Municipio": [
        "Aguascalientes","Jes√∫s Mar√≠a","Mexicali","Tijuana","La Paz","Los Cabos","Campeche","Carmen","Tapachula","Tuxtla Guti√©rrez",
        "Chihuahua","Ju√°rez (Chih)","Saltillo","Torre√≥n","Manzanillo","Villa de √Ålvarez","Gustavo A. Madero","Iztapalapa","Benito Ju√°rez (CDMX)",
        "Cuauht√©moc","Miguel Hidalgo","Durango","G√≥mez Palacio","Celaya","Le√≥n","Acapulco de Ju√°rez","Zihuatanejo de Azueta","Mineral de la Reforma",
        "Tizayuca","Guadalajara","Tlajomulco de Z√∫√±iga","San Pedro Tlaquepaque","Zapopan","Metepec","Tec√°mac","Toluca","Zumpango","Morelia","Uruapan",
        "Emiliano Zapata","Temixco","Tepic","Bah√≠a de Banderas","Apodaca","Garc√≠a","Ju√°rez (N.L.)","Monterrey","San Juan Bautista Tuxtepec","Tlacolula de Matamoros",
        "Huejotzingo","Puebla","Corregidora","El Marqu√©s","Quer√©taro","Benito Ju√°rez (Q.Roo)","Solidaridad","San Luis Potos√≠","Soledad de Graciano S√°nchez",
        "Culiac√°n","Mazatl√°n","Cajeme","Hermosillo","Centro","Nacajuca","Matamoros","Reynosa","Apizaco","Tlaxcala","Coatzacoalcos","Veracruz","Kanas√≠n",
        "M√©rida","Guadalupe","Zacatecas"
    ],
    "2015":[8.3,	7.9,	7,	6.5,	6.6,	6,	8,	8.5,	7.3,	7.8,	8.2,	7.6,	8.3,	8,	6.5,	6.4,	12.6,	12.3,	14,	13.8,	13.9,	11,	9.9,	7.4,	8.1,	7.5,	6.6,	5.7,	5.6,	6.2,	5.6,	5.6,	6.2,	7.7,	6.2,	6.9,	6,	7.9,	7.5,	6.9,	7.2,	6.4,	6,	7.6,	7.3,	6.6,	8.9,	7.7,	6.9,	6.8,	8.1,	7.7,	7.6,	8.5,	5.1,	4.7,	7.4,	6.1,	6.5,	6.3,	7.8,	8.6,	9,	8.6,	11.8,	12.1,	9.4,	9.1,	7.7,	7.7,	6.2,	8,	9,	9.5],
    "2016":[7.1,	7.4,	5.5,	6.2,	6.1,	5.8,	6.4,	7.1,	5.7,	6.7,	6.2,	5.1,	7,	6.5,	6.1,	5.4,	10.7,	9.8,	12.8,	13,	13,	6.7,	5.5,	6.4,	6.5,	7.3,	6.5,	6.8,	7.3,	6.7,	5.2,	5.6,	6.5,	7.7,	6,	5.6,	5,	6.6,	6.1,	6.8,	6.7,	7.2,	6.9,	6.3,	6.2,	5.5,	8.7,	5.6,	4.9,	6.5,	7.7,	7.4,	6.8,	7,	7.7,	8,	7.2,	5.6,	6.2,	6.2,	6,	6.3,	6.7,	6.5,	6.2,	6.4,	6.1,	5.6,	5.6,	5.5,	7.1,	8.3,	6.2,	7.1],
    "2017":[7.5,	8.9,	6.8,	7.2,	6.2,	7,	6.1,	8.2,	6.2,	6.9,	6.5,	6.2,	7.1,	6.8,	7.3,	6.9,	10.8,	10.1,	12.4,	11.7,	13.2,	5.5,	4.6,	7.9,	7.7,	7,	7.3,	5.7,	6,	9.8,	7.6,	8.3,	9.5,	9.3,	5.9,	6.7,	4.5,	6.9,	7.2,	6.2,	6.6,	8.4,	8.9,	8.5,	7.7,	6.6,	10.9,	6.7,	6,	6.4,	7.3,	7.7,	6.6,	6.9,	7.4,	7.9,	8,	6.8,	7.7,	7.9,	5.6,	6.3,	6.1,	7,	5,	5,	7,	7.2,	5.6,	4.8,	6.6,	7.9,	6.1,	7.3],
    "2018":[8.3,	8.8,	8.7,	9.6,	8.8,	8.9,	8.4,	10.5,	7.9,	8.6,	7.7,	7.2,	7.9,	7.6,	8.8,	8.4,	9.4,	8.9,	11.8,	11.4,	11.8,	7.3,	6.2,	9.2,	10.1,	8.1,	7.4,	6.1,	7.4,	11.7,	11,	11.2,	12.1,	9.3,	8,	8.4,	7.6,	9.2,	8.4,	7.4,	7.3,	9,	9.3,	9.6,	9.3,	8.2,	11.3,	8.9,	9.8,	8.4,	9.1,	8.3,	8,	8.7,	8.2,	8.2,	9.7,	8,	9.1,	9.2,	5.7,	6.9,	8.6,	9.2,	6,	6.2,	6.9,	7.1,	6.8,	6.4,	6.6,	8.7,	8.4,	8.8],
    "2019":[8.3,	8.4,	8.1,	9.6,	9.2,	9.4,	8.1,	8.9,	7.3,	7.8,	8.1,	7.6,	8.7,	8.2,	8.5,	7.8,	9.1,	8.8,	10.7,	10.5,	11,	7.1,	5.8,	8.7,	9.3,	7.3,	7,	6.8,	7.6,	11.4,	10.7,	10.6,	11.6,	7.7,	6.6,	6.8,	6.3,	8.6,	7.7,	7.2,	6.8,	9.5,	10,	8.2,	8.3,	7.9,	10.1,	7.3,	8.8,	7.3,	8.4,	7.3,	7.1,	7.9,	10.9,	10.8,	8.9,	7.4,	9.7,	9.9,	7.1,	7.8,	6.6,	7,	7.2,	7.3,	6.4,	6.2,	6.5,	6.3,	8.3,	9.1,	7.9,	8.1],
    "2020":[6.7,	5.9,	7.2,	8,	8.3,	8.1,	6.7,	8,	5.7,	6.5,	6.8,	6.8,	6.9,	6.6,	6.5,	6.3,	0.4,	0.2,	2.2,	2.3,	2.7,	6.1,	5.8,	5.7,	6.9,	5.6,	5.2,	4.9,	4.3,	8.1,	8,	7.5,	8.3,	5.8,	4.3,	5.2,	4.6,	6.5,	5.3,	5.4,	4.9,	7.2,	7.4,	6.6,	6.8,	6.3,	8.3,	5.9,	5.8,	6.8,	7.1,	5.2,	5.5,	6.2,	7.7,	6.9,	7.8,	6.6,	8.1,	8.2,	6.9,	7.9,	6,	6.1,	5.8,	6.6,	5.1,	4.9,	5.2,	6.2,	6.2,	6.9,	5.6,	5.3],
    "2021":[6.6,	6.5,	9.3,	10.5,	11.8,	12.3,	10.1,	10.5,	7.8,	8.3,	10.4,	10.5,	8.4,	8.5,	8.6,	8.2,	3,	3,	4.2,	4.5,	4,	7.5,	7.4,	6.8,	7,	9,	9,	6.4,	6.3,	9,	9,	9.1,	9.1,	6.5,	6.7,	6.7,	6.8,	9.9,	9.6,	9.6,	9.1,	11.1,	11.5,	8.2,	8.5,	8.3,	8.8,	8,	7.8,	9.5,	9,	7.4,	7.6,	7.3,	12.2,	12.1,	9,	8.8,	9.9,	10.5,	8.1,	8.2,	6.4,	6.4,	7.8,	7.9,	7.3,	7.5,	9.7,	10.2,	8.5,	8.3,	5.2,	5.2],
    "2022":[8.2,	8.4,	11.1,	12.8,	13.8,	15.1,	10.4,	11.1,	6.7,	8.8,	10.2,	9.4,	9.1,	9.5,	10.2,	10,	7.9,	7.5,	7.8,	7.7,	8,	5.6,	4.4,	7.4,	7.8,	11.9,	11.1,	7.6,	6.7,	9.3,	9.4,	9.7,	9.4,	5.9,	5.6,	6.9,	5.7,	12.2,	11.4,	9.9,	9.6,	13.4,	13.8,	9.3,	9.2,	8.8,	9.3,	5.9,	2.7,	8.8,	8.2,	8.8,	9.2,	8.6,	14.5,	14.8,	8.4,	7.9,	13.1,	13,	7.2,	7.7,	6.8,	7.2,	8,	7.6,	7,	7.6,	7.9,	9.8,	9.2,	9.3,	7.1,	6.6],
    "2023":[10.9,	9.9,	14.1,	14,	18,	17.1,	11.6,	11.5,	10.1,	11,	12,	11.8,	12.7,	13,	11.3,	11.3,	11.7,	12,	11.2,	12.2,	11.1,	8.5,	8.1,	8.4,	9.2,	12.9,	11.3,	9,	8.5,	12,	11.3,	11.6,	11.4,	6.2,	6.6,	7.3,	6.7,	9.6,	9.1,	7.8,	7.9,	14.3,	13.2,	11.8,	11.6,	10.8,	11.7,	8.8,	6.9,	7.5,	7.7,	13.3,	13.4,	13.7,	15.7,	15,	8.5,	8,	14.5,	13.9,	12.5,	13.2,	11.1,	10.4,	9.9,	10.6,	5.2,	5.1,	9.5,	10.5,	9.7,	10.9,	8.3,	8.7],
    "2024":[9,	7.3,	11.5,	12.7,	13.5,	13.2,	11.2,	10.4,	11.3,	10.9,	9.4,	10.1,	7.7,	7.4,	11,	10.8,	5.8,	6.6,	6,	7.4,	5.7,	9.7,	9.6,	10.5,	11.2,	6.6,	5.8,	8.6,	9.5,	9.8,	9.4,	9.6,	8.9,	6.6,	9.2,	8.7,	9.3,	7.6,	7,	11.3,	10.3,	11.7,	10.7,	11,	11,	11.9,	10.3,	12.4,	14.1,	13.1,	12.6,	8.2,	8.6,	9.4,	12.5,	12,	10.2,	10.6,	7.5,	7,	10.8,	11.2,	10,	9.6,	9.5,	10,	11.3,	11.6,	8.9,	9.8,	10.6,	10,	9.1,	7.7,],


}

df = pd.DataFrame(data)

# === Selecci√≥n de municipio ===
municipio = st.selectbox("Selecciona un municipio:", df["Municipio"].unique())

# Extraer valores
row = df[df["Municipio"] == municipio].iloc[0, 1:]

# === Gr√°fico ===
fig, ax = plt.subplots(figsize=(8,4))
ax.plot(row.index, row.values, marker="o", color="teal")
ax.set_title(f"Evoluci√≥n anual de {municipio}", fontsize=14)
ax.set_xlabel("A√±o")
ax.set_ylabel("Valor (%)")
ax.grid(True)

st.pyplot(fig)

# Mostrar tabla
with st.expander("Ver datos num√©ricos"):
    st.dataframe(pd.DataFrame({"A√±o": row.index, municipio: row.values}))

